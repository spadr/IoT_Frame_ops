# Generated by Django 3.1.6 on 2022-03-03 01:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import iot.models.custom_user
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('function_level', models.IntegerField(default=0)),
                ('alive_monitoring', models.BooleanField(default=False)),
                ('send_message_to_email', models.BooleanField(default=False)),
                ('line_token', models.CharField(blank=True, max_length=100, null=True)),
                ('send_message_to_line', models.BooleanField(default=False)),
                ('slack_token', models.CharField(blank=True, max_length=100, null=True)),
                ('slack_channel', models.CharField(blank=True, max_length=100, null=True)),
                ('send_message_to_slack', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', iot.models.custom_user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TubeModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.UUIDField(default=uuid.uuid4)),
                ('name', models.CharField(max_length=100)),
                ('channel', models.CharField(max_length=100)),
                ('is_variable', models.BooleanField(default=False)),
                ('data_type', models.CharField(max_length=100)),
                ('monitoring', models.BooleanField(default=False)),
                ('interval', models.IntegerField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('activity', models.DateTimeField()),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NumberModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.UUIDField(default=uuid.uuid4)),
                ('time', models.DateTimeField()),
                ('element', models.FloatField(null=True)),
                ('tube', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iot.tubemodel')),
            ],
        ),
        migrations.CreateModel(
            name='CharModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.UUIDField(default=uuid.uuid4)),
                ('time', models.DateTimeField()),
                ('element', models.CharField(max_length=100, null=True)),
                ('tube', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iot.tubemodel')),
            ],
        ),
        migrations.CreateModel(
            name='BooleanModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.UUIDField(default=uuid.uuid4)),
                ('time', models.DateTimeField()),
                ('element', models.BooleanField(null=True)),
                ('tube', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iot.tubemodel')),
            ],
        ),
    ]
